 ----------------------------- 
以人為本
 ----------------------------- 
1. 重點在人使用起來感覺怎樣，而不是加一大堆功能和限制
2. Table為主，其他為附加(挖洞，進行附加處理，不管是系統設定或者是權限設計，那不是必需的)


 ----------------------------- 
設計處理
 ----------------------------- 
1. Preview - 在附加的時候進行處理，加入標籤，使頁面不可操作 - 不一定要擋掉，也可另外url才檔，所以這不在基礎架構裡


 ----------------------------- 
方針
 ----------------------------- 
主要是套版用，不是做後台
 ----------------- 
1. 填完表，初始化，應該就可以動了，不需做任何修改(規劃)
2. 原則上可以專注在前台 & API撰寫(另外的專案)
3. 基本上是同Controller那樣，弄一個Custom資料夾或檔案，用以分開預設代碼和客製化代碼
4. 這裡基本上是評估和簡易模塊化，不做完整模塊化設計(請看後面 [模塊化議題] )
5. 模組主要是程式碼安裝，而不是軟體的套件安裝(套件安裝會增加開發複雜度，並且失去前台彈性，更會導致我的頁面變成WordPress那樣類似的Layout頁面)
 

 ----------------------------- 
客製化問題
 ----------------------------- 
預設不提供客製化
要客製化請另建資料夾
ex. 
API_Custom
Backend_Custom

注意 : 
是因為Laravel強制放在Controller裡面
並且我這專案規畫沒有要客製化(所以不搬到Base，因為這樣比較直觀)


 ----------------------------- 
模塊化議題
 ----------------------------- 
因為@include，他會直接展開並快取，如果太多@include，會使得view的模板快取檔案很肥
因此laravel view不適合模組化直接插入，因為view的模板快取檔案很肥

所以要模塊化，請用原生php的作法包成一整包，弄個簡單架構將功能插到指令會跑的地方運行即可
基本上應該只有資料庫的地方要特別處理(因為query太多會有問題，可能要合併query再parser)


 ----------------------------- 
完整模塊化設計
 ----------------------------- 
會在
php hahaha framework & p_h_p framework
的
single table
進行規劃(那時會弄一包原生的，可以快速同步兩個專案，但不是完全客製化(這一個人不可能做得完(指架構部分)))

這邊的完整模塊不一定 = 
php hahaha framework & p_h_p framework
的
single table
的
完整模塊化


要整入專案預設的，必須不影響到我專案初始化，必需提供使用懶人包(例如要額外設定)
模組不是拿來修改的，是直接掛上使用的，使用方法必須精簡
因為hahaha不一定會讓所有模組放進來(我沒事也不會去幫人家改他)，如有爭議，請另外弄一包，不管是composer or 私下安裝包


 ----------------------------- 
模塊化規劃
 ----------------------------- 
整入的模組(不包含私下一包 & composer包)
依據關聯做簡易分類，依關聯分兩層
1. general - 關聯小的
2. composite - 關聯大的
通常移除先移除關聯大的(因為難維護)

採取的是樹狀拓展關聯(也就是內建的不會相依私下包 & composer包)
hahaha有決定權那些要當作預設模組(我方針是for 快速套版，不是做客製化)，
不然請fork出去另外專案

 ----------------------------- 
模塊化安裝
 ----------------------------- 
基本上是程式碼加入，而不是像OpenCart & WordPress純模組安裝
我方針是for 快速套版，不是做客製化或套裝軟件

